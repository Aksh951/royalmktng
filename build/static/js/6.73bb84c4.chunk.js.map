{"version":3,"sources":["services/firebase.js","constants/paths.js","hooks/use-user.js","components/header.js","components/timeline.js","components/sidebar/user.js","context/logged-in-user.js","components/sidebar/index.js","pages/dashboard.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","getUserByUsername","map","item","data","docId","id","getUserByUserId","userId","user","getSuggestedProfiles","following","query","limit","profiles","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","followers","getUserPhotosByUserId","photos","photo","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserId","DEFAULT_IMAGE_PATH","useUser","useState","activeUser","setActiveUser","useEffect","getUserObjByUserId","Header","loggedInUser","useContext","UserContext","uid","FirebaseContext","history","useHistory","className","to","ROUTES","aria-label","src","alt","type","title","onClick","auth","signOut","push","onKeyDown","event","key","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onError","e","target","Timeline","User","fullName","count","height","LoggedInUserContext","createContext","Sidebar","Dashboard","document","Provider","value"],"mappings":"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","file":"static/js/6.73bb84c4.chunk.js","sourcesContent":["import { firebase, FieldValue } from '../lib/firebase';\n\nexport async function doesUsernameExist(username) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get();\n\n  return result.docs.length > 0;\n}\n\nexport async function getUserByUsername(username) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', username)\n    .get();\n\n  return result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }));\n}\n\n// get user from the firestore where userId === userId (passed from the auth)\nexport async function getUserByUserId(userId) {\n  const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n  const user = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }));\n\n  return user;\n}\n\n// check all conditions before limit results\nexport async function getSuggestedProfiles(userId, following) {\n  let query = firebase.firestore().collection('users');\n\n  if (following.length > 0) {\n    query = query.where('userId', 'not-in', [...following, userId]);\n  } else {\n    query = query.where('userId', '!=', userId);\n  }\n  const result = await query.limit(10).get();\n\n  const profiles = result.docs.map((user) => ({\n    ...user.data(),\n    docId: user.id\n  }));\n\n  return profiles;\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId, // currently logged in user document id (karl's profile)\n  profileId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(loggedInUserDocId)\n    .update({\n      following: isFollowingProfile\n        ? FieldValue.arrayRemove(profileId)\n        : FieldValue.arrayUnion(profileId)\n    });\n}\n\nexport async function updateFollowedUserFollowers(\n  profileDocId, // currently logged in user document id (karl's profile)\n  loggedInUserDocId, // the user that karl requests to follow\n  isFollowingProfile // true/false (am i currently following this person?)\n) {\n  return firebase\n    .firestore()\n    .collection('users')\n    .doc(profileDocId)\n    .update({\n      followers: isFollowingProfile\n        ? FieldValue.arrayRemove(loggedInUserDocId)\n        : FieldValue.arrayUnion(loggedInUserDocId)\n    });\n}\n\nexport async function getPhotos(userId, following) {\n  // [5,4,2] => following\n  const result = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', 'in', following)\n    .get();\n\n  const userFollowedPhotos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      // photo.userId = 2\n      const user = await getUserByUserId(photo.userId);\n      // raphael\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n\n  return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUserId(userId) {\n  const result = await firebase\n    .firestore()\n    .collection('photos')\n    .where('userId', '==', userId)\n    .get();\n\n  const photos = result.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id\n  }));\n  return photos;\n}\n\nexport async function isUserFollowingProfile(loggedInUserUsername, profileUserId) {\n  const result = await firebase\n    .firestore()\n    .collection('users')\n    .where('username', '==', loggedInUserUsername) // karl (active logged in user)\n    .where('following', 'array-contains', profileUserId)\n    .get();\n\n  const [response = {}] = result.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id\n  }));\n\n  return response.userId;\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileUserId,\n  followingUserId\n) {\n  // 1st param: karl's doc id\n  // 2nd param: raphael's user id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateLoggedInUserFollowing(activeUserDocId, profileUserId, isFollowingProfile);\n\n  // 1st param: karl's user id\n  // 2nd param: raphael's doc id\n  // 3rd param: is the user following this profile? e.g. does karl follow raphael? (true/false)\n  await updateFollowedUserFollowers(profileDocId, followingUserId, isFollowingProfile);\n}\n","export const DEFAULT_IMAGE_PATH = '/images/avatars/default.png';\n","import { useState, useEffect } from 'react';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser(userId) {\n  const [activeUser, setActiveUser] = useState();\n\n  useEffect(() => {\n    async function getUserObjByUserId(userId) {\n      const [user] = await getUserByUserId(userId);\n      setActiveUser(user || {});\n    }\n\n    if (userId) {\n      getUserObjByUserId(userId);\n    }\n  }, [userId]);\n\n  return { user: activeUser, setActiveUser };\n}\n","import { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport FirebaseContext from '../context/firebase';\nimport UserContext from '../context/user';\nimport * as ROUTES from '../constants/routes';\nimport { DEFAULT_IMAGE_PATH } from '../constants/paths';\nimport useUser from '../hooks/use-user';\n\nexport default function Header() {\n  const { user: loggedInUser } = useContext(UserContext);\n  const { user } = useUser(loggedInUser?.uid);\n  const { firebase } = useContext(FirebaseContext);\n  const history = useHistory();\n\n  return (\n    <header className=\"h-16 bg-white border-b border-gray-primary mb-8\">\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\n        <div className=\"flex justify-between h-full\">\n          <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\n            <h1 className=\"flex justify-center w-full\">\n              <Link to={ROUTES.DASHBOARD} aria-label=\"Direct Mktng logo\">\n                <img src=\"/images/logo.png\" alt=\"Direct Mktng\" className=\"mt-2 w-6/12\" />\n              </Link>\n            </h1>\n          </div>\n          <div className=\"text-gray-700 text-center flex items-center align-items\">\n            {loggedInUser ? (\n              <>\n                {/* <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                    />\n                  </svg>\n                </Link> */}\n\n                <button\n                  type=\"button\"\n                  title=\"Sign Out\"\n                  onClick={() => {\n                    firebase.auth().signOut();\n                    history.push(ROUTES.LOGIN);\n                  }}\n                  onKeyDown={(event) => {\n                    if (event.key === 'Enter') {\n                      firebase.auth().signOut();\n                      history.push(ROUTES.LOGIN);\n                    }\n                  }}\n                >\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                    />\n                  </svg>\n                </button>\n                {user && (\n                  <div className=\"flex items-center cursor-pointer\">\n                    <Link to={`/p/${user?.username}`}>\n                      <img\n                        className=\"rounded-full h-8 w-8 flex\"\n                        src={`/images/avatars/${user?.username}.jpg`}\n                        alt={`${user?.username} profile`}\n                        onError={(e) => {\n                          e.target.src = DEFAULT_IMAGE_PATH;\n                        }}\n                      />\n                    </Link>\n                  </div>\n                )}\n              </>\n            ) : (\n              <>\n                <Link to={ROUTES.LOGIN}>\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\n                  >\n                    Log In\n                  </button>\n                </Link>\n                <Link to={ROUTES.SIGN_UP}>\n                  <button\n                    type=\"button\"\n                    className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\n                  >\n                    Sign Up\n                  </button>\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n// import { useContext } from 'react';\n// import Skeleton from 'react-loading-skeleton';\n// import LoggedInUserContext from '../context/logged-in-user';\n// import usePhotos from '../hooks/use-photos';\n// import Post from './post';\n\nexport default function Timeline() {\n  // const { user } = useContext(LoggedInUserContext);\n  // const { photos } = usePhotos(user);\n\n  return (\n    <div className=\"container col-span-2\">\n      <p>The content will be updated</p>\n      {/* {!photos ? (\n        <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n      ) : (\n        photos.map((content) => <Post key={content.docId} content={content} />)\n      )} */}\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Skeleton from 'react-loading-skeleton';\nimport { DEFAULT_IMAGE_PATH } from '../../constants/paths';\n\nexport default function User({ username, fullName }) {\n  return !username || !fullName ? (\n    <Skeleton count={1} height={61} />\n  ) : (\n    <Link to={`/p/${username}`} className=\"grid grid-cols-4 gap-4 mb-6 items-center\">\n      <div className=\"flex items-center justify-between col-span-1\">\n        <img\n          className=\"rounded-full w-16 flex mr-3\"\n          src={`/images/avatars/${username}.jpg`}\n          alt=\"\"\n          onError={(e) => {\n            e.target.src = DEFAULT_IMAGE_PATH;\n          }}\n        />\n      </div>\n      <div className=\"col-span-3\">\n        <p className=\"font-bold text-sm\">{username}</p>\n        <p className=\"text-sm\">{fullName}</p>\n      </div>\n    </Link>\n  );\n}\n\nUser.propTypes = {\n  username: PropTypes.string,\n  fullName: PropTypes.string\n};\n","import { createContext } from 'react';\n\nconst LoggedInUserContext = createContext(null);\nexport default LoggedInUserContext;\n","import { useContext } from 'react';\nimport User from './user';\nimport Suggestions from './suggestions';\nimport LoggedInUserContext from '../../context/logged-in-user';\n\nexport default function Sidebar() {\n  const\n    {\n      user: {\n        docId = '', fullName, username, userId, following\n      }\n      = {}\n    } = useContext(LoggedInUserContext);\n\n  return (\n    <div className=\"p-4\">\n      <User username={username} fullName={fullName} />\n      {/* <Suggestions userId={userId} following={following} loggedInUserDocId={docId} /> */}\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/header';\nimport Timeline from '../components/timeline';\nimport Sidebar from '../components/sidebar';\nimport useUser from '../hooks/use-user';\nimport LoggedInUserContext from '../context/logged-in-user';\n\nexport default function Dashboard({ user: loggedInUser }) {\n  const { user, setActiveUser } = useUser(loggedInUser.uid);\n  useEffect(() => {\n    document.title = 'Direct Mktng';\n  }, []);\n\n  return (\n    <LoggedInUserContext.Provider value={{ user, setActiveUser }}>\n      <div className=\"bg-gray-background\">\n        <Header />\n        <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n          <Sidebar />\n          <Timeline />\n        </div>\n      </div>\n    </LoggedInUserContext.Provider>\n  );\n}\n\nDashboard.propTypes = {\n  user: PropTypes.object.isRequired\n};\n"],"sourceRoot":""}